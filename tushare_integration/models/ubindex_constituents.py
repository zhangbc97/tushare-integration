# This file is auto-generated by generate_models.py
# This file may be manually edited after generation
# The file has been formatted using black

from sqlalchemy import Column, text
from clickhouse_sqlalchemy import engines
from typing import ClassVar, Dict, Any, List

from tushare_integration.models.core import String, Integer, Float, Date, DateTime, Base


class UbindexConstituents(Base):
    """优币指数成分"""

    __tablename__: str = 'ubindex_constituents'
    __api_id__: ClassVar[int] = 99
    __api_name__: ClassVar[str] = 'ubindex_constituents'
    __api_title__: ClassVar[str] = '优币指数成分'
    __api_info_title__: ClassVar[str] = '优币指数成分'
    __api_path__: ClassVar[List[str]] = ['另类数据', '行情数据', '优币指数成分']
    __api_path_ids__: ClassVar[List[int]] = [41, 52, 99]
    __api_points_required__: ClassVar[int] = 2000
    __api_special_permission__: ClassVar[bool] = False
    __dependencies__: ClassVar[List[str]] = []
    __primary_key__: ClassVar[List[str]] = []
    __start_date__: ClassVar[str | None] = None
    __end_date__: ClassVar[str | None] = None
    __api_params__: ClassVar[Dict[str, Any]] = {'index_name': {'type': 'str', 'required': True, 'description': '指数名称'}, 'start_date': {'type': 'str', 'required': True, 'description': '开始日期，格式：yyyymmdd'}, 'end_date': {'type': 'str', 'required': True, 'description': '结束日期，格式：yyyymmdd'}, 'limit': {'type': 'int', 'required': False, 'description': '单次返回数据长度'}, 'offset': {'type': 'int', 'required': False, 'description': '请求数据的开始位移量'}}
    
    __mapper_args__ = {'primary_key': __primary_key__}
    __table_args__ = (
        # ClickHouse引擎
        engines.ReplacingMergeTree(order_by=__primary_key__),
        {
            'comment': '优币指数成分',
            # MySQL引擎
            'mysql_engine': 'InnoDB',
            # StarRocks引擎
            'starrocks_primary_key': ','.join(__primary_key__),
            'starrocks_order_by': ','.join(__primary_key__),
            # Apache Doris引擎
            'doris_unique_key': __primary_key__,
        }
    )
    
    trade_date = Column('trade_date', Date, nullable=False, default="1970-01-01", server_default=text("'1970-01-01'"), comment='日期')
    index_name = Column('index_name', String(), nullable=False, default="", server_default=text("''"), comment='指数名称')
    symbol = Column('symbol', String(), nullable=False, default="", server_default=text("''"), comment='成分货币简称')
    circulated_cap = Column('circulated_cap', Float, nullable=False, default=0.0, server_default=text("'0.0'"), comment='计算周期内日流动市值均值')
    sqrt_cap = Column('sqrt_cap', Float, nullable=False, default=0.0, server_default=text("'0.0'"), comment='计算周期内日流动市值均值平方根')
    weight = Column('weight', Float, nullable=False, default=0.0, server_default=text("'0.0'"), comment='计算周期内权重')
    price = Column('price', Float, nullable=False, default=0.0, server_default=text("'0.0'"), comment='指数日价格')
    create_time = Column('create_time', DateTime, nullable=False, default="1970-01-01 00:00:00", server_default=text("'1970-01-01 00:00:00'"), comment='入库时间')