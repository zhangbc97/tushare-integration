# This file is auto-generated by generate_models.py
# This file may be manually edited after generation
# The file has been formatted using black

from sqlalchemy import Column, text
from clickhouse_sqlalchemy import engines
from typing import ClassVar, Dict, Any, List

from tushare_integration.models.core import String, Integer, Float, Date, DateTime, Base


class BcBestotcqt(Base):
    """柜台流通式债券最优报价"""

    __tablename__: str = 'bc_bestotcqt'
    __api_id__: ClassVar[int] = 323
    __api_name__: ClassVar[str] = 'bc_bestotcqt'
    __api_title__: ClassVar[str] = '柜台流通式债券最优报价'
    __api_info_title__: ClassVar[str] = '柜台流通式债券最优报价'
    __api_path__: ClassVar[List[str]] = ['数据接口', '债券', '柜台流通式债券最优报价']
    __api_path_ids__: ClassVar[List[int]] = [2, 184, 323]
    __api_points_required__: ClassVar[int] = 2000
    __api_special_permission__: ClassVar[bool] = False
    __dependencies__: ClassVar[List[str]] = []
    __primary_key__: ClassVar[List[str]] = ['ts_code', 'trade_date']
    __start_date__: ClassVar[str | None] = None
    __end_date__: ClassVar[str | None] = None
    __api_params__: ClassVar[Dict[str, Any]] = {'trade_date': {'type': 'str', 'required': False, 'description': ''}, 'start_date': {'type': 'str', 'required': False, 'description': ''}, 'end_date': {'type': 'str', 'required': False, 'description': ''}, 'ts_code': {'type': 'str', 'required': False, 'description': ''}, 'limit': {'type': 'int', 'required': False, 'description': '单次返回数据长度'}, 'offset': {'type': 'int', 'required': False, 'description': '请求数据的开始位移量'}}
    
    __mapper_args__ = {'primary_key': __primary_key__}
    __table_args__ = (
        # ClickHouse引擎
        engines.ReplacingMergeTree(order_by=__primary_key__),
        {
            'comment': '柜台流通式债券最优报价',
            # MySQL引擎
            'mysql_engine': 'InnoDB',
            # StarRocks引擎
            'starrocks_primary_key': ','.join(__primary_key__),
            'starrocks_order_by': ','.join(__primary_key__),
            # Apache Doris引擎
            'doris_unique_key': __primary_key__,
        }
    )
    
    trade_date = Column('trade_date', Date, nullable=False, default="1970-01-01", server_default=text("'1970-01-01'"), comment='报价日期')
    ts_code = Column('ts_code', String(16), nullable=False, default="", server_default=text("''"), comment='债券编码')
    name = Column('name', String(), nullable=False, default="", server_default=text("''"), comment='债券简称')
    remain_maturity = Column('remain_maturity', String(), nullable=False, default="", server_default=text("''"), comment='剩余期限')
    bond_type = Column('bond_type', String(), nullable=False, default="", server_default=text("''"), comment='债券类型')
    best_buy_bank = Column('best_buy_bank', String(), nullable=False, default="", server_default=text("''"), comment='最优报买价方')
    best_buy_yield = Column('best_buy_yield', Float, nullable=False, default=0.0, server_default=text("'0.0'"), comment='投资者最优买入价到期收益率(%)')
    best_buy_price = Column('best_buy_price', Float, nullable=False, default=0.0, server_default=text("'0.0'"), comment='投资者最优买入全价')
    best_sell_bank = Column('best_sell_bank', String(), nullable=False, default="", server_default=text("''"), comment='最优卖报价方')
    best_sell_yield = Column('best_sell_yield', Float, nullable=False, default=0.0, server_default=text("'0.0'"), comment='投资者最优卖出价到期收益率(%)')
    best_sell_price = Column('best_sell_price', Float, nullable=False, default=0.0, server_default=text("'0.0'"), comment='投资者最优卖出全价')